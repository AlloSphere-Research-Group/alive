field:
	of energy[initial]
	behaves like:
		 diffuses[rate, etc]
			and decays[factor]
	(looks like?)
	(sounds like?)
	
sun[2]:	
	on(collision):
		explode
	behaves like:
		random walks[?]
			and adds energy[n] to field
	looks like:
	sounds like:
	
creature[50]: agent
	includes:
		energy
		prev
		hum = Pulse( LFO(), LFO() ) * energy
		scream = Env(Filter(White()))
	behaves like:
		on(collision):
			reverse direction
			scream()
		and:
			change = sign(delta(sense(field)))
			self.turn = lowpass(if(change > 0, 0, noise()))
			self.move = 1
			accum(energy, sense(field))

			function() 
				if change
					move forward mostly
					scream()
				else
					tumble about[?]
					absorbs / loses energy	
				end
			end
				
	looks like:
	self.sound = hum + scream
		








a = {
	draw = function()
	
	end,
	
	sound = function()
	
	end,
	
	move = function()
	
	end,
	
	sense = function()
		if the agent position is in an area of high energy
	end
}

world = {
	agents: {

	},
	fields: {

	},
	
}